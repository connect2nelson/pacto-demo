# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
require 'octokit'
require 'vcr'
require 'pacto'

Pacto.configure do |c|
  c.contracts_path = 'spec/contracts'
  c.strict_matchers = false
end

def load_contracts
  Dir['spec/contracts/*'].each do |host|
    host = File.basename host
    Pacto.load_all host, "https://#{host}"
  end
end

if ENV['PACTO_MODE'] == 'validate'
  load_contracts
  Pacto.use :default
  # HACK: Shouldn't need to create then uncreate stubs
  WebMock.reset!
  Pacto.validate!
elsif  ENV['PACTO_MODE'] == 'stub'
  load_contracts
  Pacto.use :default, {:name => "pacto", :time=> "2013-05-07T18:28:16Z"}
  VCR.turn_off!
else
  Pacto.generate!
end

RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus
  config.order = 'random'
  config.treat_symbols_as_metadata_keys_with_true_values = true
end

unless ENV['PACTO_MODE'] == 'stub'
  VCR.configure do |c|
    c.cassette_library_dir = 'spec/cassettes'
    c.hook_into :webmock
    c.configure_rspec_metadata!
    c.allow_http_connections_when_no_cassette = true
    c.default_cassette_options = { :erb => {:id => 'tarso'} }
  end
end
